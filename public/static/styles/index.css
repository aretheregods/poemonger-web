*,
*::before,
*::after {
    box-sizing: border-box;
}

:root {
    --input-border: #8b8a8b;
    --input-focus: 245, 100%, 42%;
    --input-invalid: 348, 100%, 48%;
    --button-color: 244, 84%;
    --button-color-l: 79%;
    --button-text-color: 267, 100%, 15%;
}

body {
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI',
        Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue',
        sans-serif;
}

nav {
    display: flex;
    justify-content: space-between;

    & a {
        text-decoration: none;
        display: grid;
        align-items: center;
    }

    & .login-signup_links {
        display: flex;
        align-items: center;
        gap: 1rem;
        padding: 0.5rem;
    }
}

#shopping-cart_button {
    background: none;
    color: inherit;
    border: none;
    padding: 0;
    font: inherit;
    cursor: pointer;
    outline: inherit;
}

[popover]:popover-open {
    opacity: 1;
    transform: scaleX(1);
}

[popover] {
    font-size: 1.2rem;
    padding: 10px;

    /* Final state of the exit animation */
    opacity: 0;
    transform: scaleX(0);

    transition: opacity 0.7s, transform 0.7s, overlay 0.7s allow-discrete,
        display 0.7s allow-discrete;
    /* Equivalent to
  transition: all 0.7s allow-discrete; */
}

/* Needs to be after the previous [popover]:popover-open rule
to take effect, as the specificity is the same */
@starting-style {
    [popover]:popover-open {
        opacity: 0;
        transform: scaleX(0);
    }
}

/* Transition for the popover's backdrop */

[popover]::backdrop {
    background-color: rgb(0 0 0 / 0%);
    transition: display 0.7s allow-discrete, overlay 0.7s allow-discrete,
        background-color 0.7s;
    /* Equivalent to
  transition: all 0.7s allow-discrete; */
}

[popover]:popover-open::backdrop {
    background-color: rgb(0 0 0 / 25%);
}

/* The nesting selector (&) cannot represent pseudo-elements
so this starting-style rule cannot be nested */

@starting-style {
    [popover]:popover-open::backdrop {
        background-color: rgb(0 0 0 / 0%);
    }
}

main {
    display: grid;
    justify-content: center;
}

button,
input,
select,
textarea {
    font: inherit;
}

a.button,
button.button {
    font-size: medium;
    padding: 0.5rem 1rem;
    border: none;
    border-radius: 0.5rem;
    background-color: hsl(var(--button-color), var(--button-color-l));
    color: hsl(var(--button-text-color));
    border: none;
    width: min-content;
    justify-self: end;
    white-space: nowrap;
    text-decoration: none;

    &.add-to-cart {
        background-color: hsl(45, 97%, 75%);

        &.added {
            background-color: hsl(45, 97%, 50%);
            color: hsl(var(--button-text-color));
        }

        & > * {
            pointer-events: none;
        }
    }
}

a.button:hover,
button.button:hover {
    background-color: hsl(
        var(--button-color),
        calc(var(--button-color-l) - 20%)
    );
    color: white;
    transition: all 180ms ease-in-out;

    &.add-to-cart {
        background-color: hsl(45, 97%, 50%);
        color: hsl(var(--button-text-color));
    }
}

.flexible-buttons {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;

    & > * {
        flex: 1;
        min-width: fit-content;
    }
}

.book-cover {
    aspect-ratio: 10 / 16;
}

.poem-container {
    width: fit-content;

    & p:not(.read-more-link) {
        text-align: left;
    }

    & hr.ready-to-go_message {
        border: none;
        border-top: 3px double #333;
        color: #333;
        overflow: visible;
        text-align: center;
        height: 5px;
        width: 100%;
    }
    & hr.ready-to-go_message::after {
        background: #fff;
        content: 'Ready to go?';
        padding: 0 4px;
        position: relative;
        top: -13px;
    }
}

.read-more-link {
    text-align: center;
}
